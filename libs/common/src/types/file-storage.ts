// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v3.20.3
// source: file-storage.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "fileStorage";

export interface UploadFileRequest {
  file: Uint8Array;
  fileName: string;
  contentType: string;
  token: string;
}

export interface UploadFileResponse {
  fileUrl: string;
}

export const FILE_STORAGE_PACKAGE_NAME = "fileStorage";

export interface FileStorageServiceClient {
  uploadFile(request: UploadFileRequest): Observable<UploadFileResponse>;
}

export interface FileStorageServiceController {
  uploadFile(
    request: UploadFileRequest,
  ): Promise<UploadFileResponse> | Observable<UploadFileResponse> | UploadFileResponse;
}

export function FileStorageServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["uploadFile"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("FileStorageService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("FileStorageService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const FILE_STORAGE_SERVICE_NAME = "FileStorageService";
